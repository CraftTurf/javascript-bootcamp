'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sync = sync;

var _glob = require('glob');

var _util = require('util.inherits');

var _util2 = _interopRequireDefault(_util);

var _util3 = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _GlobSync(pattern, options, shouldIgnore) {

  this[_util3.IGNORE] = shouldIgnore;
  _glob.GlobSync.call(this, pattern, options);
}

(0, _util2.default)(_GlobSync, _glob.GlobSync);

_GlobSync.prototype._readdir = function (abs, inGlobStar) {

  // `options.nodir` makes `options.mark` as `true`.
  // Mark `abs` first
  // to make sure `'node_modules'` will be ignored immediately with ignore pattern `'node_modules/'`.

  // There is a built-in cache about marked `File.Stat` in `glob`, so that we could not worry about the extra invocation of `this._mark()`
  var marked = this._mark(abs);

  if (this[_util3.IGNORE] && this[_util3.IGNORE](marked)) {
    return null;
  }

  return _glob.GlobSync.prototype._readdir.call(this, abs, inGlobStar);
};

function sync(_patterns) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var _createTasks = (0, _util3.createTasks)(_patterns, options),
      join = _createTasks.join,
      patterns = _createTasks.patterns,
      ignore = _createTasks.ignore,
      opts = _createTasks.opts,
      result = _createTasks.result;

  if (result) {
    return result;
  }

  var groups = patterns.map(function (pattern) {
    return new _GlobSync(pattern, opts, ignore).found;
  });

  return join(groups);
}